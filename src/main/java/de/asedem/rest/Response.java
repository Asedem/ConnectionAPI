package de.asedem.rest;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.json.JSONObject;

public class Response {

    private final JSONObject value;

    public Response(JSONObject value) {
        this.value = value;
    }

    /**
     * Get the JSON value the is saved in the response
     *
     * @return the JSON value the is saved in the response
     */
    public JSONObject asRawValue() {
        return value;
    }

    /**
     * Get the JSON value the is saved in the response as a String
     *
     * @return the JSON value the is saved in the response as a String
     */
    public String asValueString() {
        return this.value.toString();
    }

    /**
     * Get the JSON value the is saved in the response as a java object
     *
     * @param targetClass The class of the java object
     * @param <T>         The class where the response should bhe mapped to
     * @return The java object if the response can be mapped
     * @throws JsonProcessingException if the response can't be mapped to the class
     */
    public <T> JavaObjectHolder<T> asJavaObject(Class<T> targetClass) throws JsonProcessingException {

        return new JavaObjectHolder<>(new ObjectMapper().readValue(this.value.toString(), targetClass));
    }

    /**
     * A holder class for java objects generated by the response class
     *
     * @param get gets the java object, that is stored in this class
     * @param <T> the class of the java abject that is stored in this class
     */
    public record JavaObjectHolder<T>(T get) {
    }
}
